/*
 * User API
 *
 * An API for managing system users
 *
 * API version: 1.0.3
 * Contact: joe@jjssoftware.co.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type UserCredentials struct {
	Username string `json:"username,omitempty"`

	Password string `json:"password"`
}

// AssertUserCredentialsRequired checks if the required fields are not zero-ed
func AssertUserCredentialsRequired(obj UserCredentials) error {
	elements := map[string]interface{}{
		"password": obj.Password,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseUserCredentialsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserCredentials (e.g. [][]UserCredentials), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUserCredentialsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserCredentials, ok := obj.(UserCredentials)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUserCredentialsRequired(aUserCredentials)
	})
}
