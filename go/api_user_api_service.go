/*
 * User API
 *
 * An API for managing system users
 *
 * API version: 1.0.3
 * Contact: joe@jjssoftware.co.uk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"errors"
	"net/http"
)

// UserAPIApiService is a service that implents the logic for the UserAPIApiServicer
// This service should implement the business logic for every endpoint for the UserAPIApi API.
// Include any external packages or services that will be required by this service.
type UserAPIApiService struct {
}

// NewUserAPIApiService creates a default api service
func NewUserAPIApiService() UserAPIApiServicer {
	return &UserAPIApiService{}
}

// AddUser - adds a new user
func (s *UserAPIApiService) AddUser(ctx context.Context, newUser NewUser) (ImplResponse, error) {
	// TODO - update AddUser with the required logic for this service method.
	// Add api_user_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, User{}) or use other options such as http.Ok ...
	//return Response(201, User{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddUser method not implemented")
}

// AuthenticateUser -
func (s *UserAPIApiService) AuthenticateUser(ctx context.Context, userCredentials UserCredentials) (ImplResponse, error) {
	// TODO - update AuthenticateUser with the required logic for this service method.
	// Add api_user_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, AuthenticatedUser{}) or use other options such as http.Ok ...
	//return Response(201, AuthenticatedUser{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AuthenticateUser method not implemented")
}

// GetUserByUserId - returns a user for a specific userId
func (s *UserAPIApiService) GetUserByUserId(ctx context.Context, userId int32) (ImplResponse, error) {
	// TODO - update GetUserByUserId with the required logic for this service method.
	// Add api_user_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserByUserId method not implemented")
}

// GetUserByUserName - returns a user for a specific userName
func (s *UserAPIApiService) GetUserByUserName(ctx context.Context, userName string) (ImplResponse, error) {
	// TODO - update GetUserByUserName with the required logic for this service method.
	// Add api_user_api_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	//return Response(200, User{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserByUserName method not implemented")
}
